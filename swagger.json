{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Marshall's Headphones",
    "description": "Developers: Vyacheslav Pak, Erik Akhmetpekov",
    "license": {
      "name": "AITU",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin/results": {
      "get": {
        "tags": [
          "GET all users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/user/registration": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "User's registration",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json/ejs"
        ],
        "responses": {
          "200": {
            "description": "New user  is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Database error"
          }
        }
      }
    },
    "/admin/delete/{email}": {
      "parameters": [
        {
          "name": "Email",
          "in": "path",
          "required": true,
          "description": "Email of user that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete user with given Email",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/admin/update/{email}": {
      "parameters": [
        {
          "name": "Email",
          "in": "path",
          "required": true,
          "description": "Email of user that we want to find",
          "type": "string"
        }
      ],
      "put": {
        "summary": "Update user with give Email",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Create new admin in system",
        "parameters": [
          {
            "name": "admin",
            "in": "body",
            "description": "Admin that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json/ejs"
        ],
        "responses": {
          "200": {
            "description": "New admin  is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Database error"
          }
        }
      }
    },
    "/purchase/results": {
      "get": {
        "tags": [
          "GET all products"
        ],
        "summary": "Get all products in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/purchase"
            }
          }
        }
      }
    },
    "/purchase": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create new purchase in system",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product that we want to create",
            "schema": {
              "$ref": "#/definitions/purchase"
            }
          }
        ],
        "produces": [
          "application/json/ejs"
        ],
        "responses": {
          "200": {
            "description": "New product  is created",
            "schema": {
              "$ref": "#/definitions/purchase"
            }
          },
          "409": {
            "description": "Database error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "required": [
            true
          ],
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "required": [
            true
          ]
        },
        "password": {
          "type": "string",
          "required": [
            true
          ]
        },
        "re_pass": {
          "type": "string",
          "required": [
            true
          ]
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "purchase": {
      "required": [
        "Products"
      ],
      "properties": {
        "productName": {
          "type": "string",
          "required": [
            true
          ],
          "uniqueItems": true
        },
        "cost": {
          "type": "string",
          "required": [
            true
          ]
        },
        "color": {
          "type": "string",
          "required": [
            true
          ]
        },
        "description": {
          "type": "string",
          "required": [
            true
          ]
        }
      }
    },
    "Products": {
      "type": "array",
      "$ref": "#/definitions/purchase"
    },
    "updateUser": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "required": [
            true
          ],
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "required": [
            true
          ]
        },
        "password": {
          "type": "string",
          "required": [
            true
          ]
        },
        "re_pass": {
          "type": "string",
          "required": [
            true
          ]
        }
      }
    }
  }
}


